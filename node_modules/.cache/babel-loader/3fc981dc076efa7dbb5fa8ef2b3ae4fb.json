{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar token_managers_1 = require(\"../token-managers\");\n\nvar utils_1 = require(\"../utils\");\n\nvar token_request_based_authenticator_1 = require(\"./token-request-based-authenticator\");\n\nvar CloudPakForDataAuthenticator =\n/** @class */\nfunction (_super) {\n  __extends(CloudPakForDataAuthenticator, _super);\n  /**\n   * Cloud Pak for Data Authenticator Class\n   *\n   * Handles the CP4D authentication pattern:\n   * A username and password are provided and used to retrieve a bearer token.\n   *\n   * @param {Object} options\n   * @constructor\n   */\n\n\n  function CloudPakForDataAuthenticator(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.requiredOptions = ['username', 'password', 'url'];\n    utils_1.validateInput(options, _this.requiredOptions);\n    _this.username = options.username;\n    _this.password = options.password; // the param names are shared between the authenticator and the token manager\n    // so we can just pass along the options object\n\n    _this.tokenManager = new token_managers_1.Cp4dTokenManager(options);\n    return _this;\n  }\n\n  return CloudPakForDataAuthenticator;\n}(token_request_based_authenticator_1.TokenRequestBasedAuthenticator);\n\nexports.CloudPakForDataAuthenticator = CloudPakForDataAuthenticator;","map":null,"metadata":{},"sourceType":"script"}