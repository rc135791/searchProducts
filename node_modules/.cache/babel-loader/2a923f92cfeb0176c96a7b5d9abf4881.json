{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar PAGINATION_PART = {\n  WHOLE_PAGES: 'WHOLE_PAGES',\n  HEAD_PART: 'HEAD_PART',\n  MIDDLE_PART: 'MIDDLE_PART',\n  TAIL_PART: 'TAIL_PART'\n};\nvar PAGINATION_ACTIONS = {\n  PREV: 'PREV',\n  NEXT: 'NEXT'\n};\n\nvar PageButtonHOC = function PageButtonHOC(className) {\n  var PageButton = function PageButton(_ref) {\n    var children = _ref.children,\n        handleClick = _ref.handleClick,\n        disabled = _ref.disabled,\n        active = _ref.active;\n    var btnClassName = className + '__btn';\n    var disableClassName = disabled ? className + '__btn--disable' : '';\n    var activeClassName = active ? className + '__btn--active' : '';\n    return _react2.default.createElement('li', {\n      className: className + '__item',\n      onClick: handleClick\n    }, _react2.default.createElement('button', {\n      className: btnClassName + ' ' + (disableClassName || activeClassName)\n    }, children));\n  };\n\n  PageButton.displayName = 'PageButton';\n  PageButton.defaultProps = {\n    handleClick: function handleClick() {},\n    children: '',\n    disabled: false,\n    active: false\n  };\n  return PageButton;\n};\n\nvar Pagination = function (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props) {\n    _classCallCheck(this, Pagination);\n\n    var _this = _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));\n\n    _this.changePageByAction = _this.changePageByAction.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.pageCount = Math.ceil(props.totalCount / props.perPageItemCount);\n    _this.lastPage = _this.pageCount - 1;\n    _this.pageArr = [].concat(_toConsumableArray(new Array(_this.pageCount).keys()));\n    _this.halfPartialPageCount = Math.floor(props.partialPageCount / 2);\n    _this.PageButton = PageButtonHOC(props.className);\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: 'changePage',\n    value: function changePage(newPage) {\n      var _this2 = this;\n\n      return function () {\n        var activePage = _this2.props.activePage;\n\n        if (activePage !== newPage && !isNaN(newPage)) {\n          _this2.props.handleChangePage(newPage);\n        }\n      };\n    }\n  }, {\n    key: 'changePageByAction',\n    value: function changePageByAction(status) {\n      var _this3 = this;\n\n      return function () {\n        var activePage = _this3.props.activePage;\n        var newPage = void 0;\n\n        switch (status) {\n          case PAGINATION_ACTIONS.PREV:\n            newPage = activePage === 0 ? activePage : activePage - 1;\n            break;\n\n          case PAGINATION_ACTIONS.NEXT:\n            newPage = activePage === _this3.lastPage ? activePage : activePage + 1;\n            break;\n\n          default:\n            newPage = activePage;\n        }\n\n        if (activePage !== newPage) _this3.props.handleChangePage(newPage);\n      };\n    }\n  }, {\n    key: 'getPaginationStatus',\n    value: function getPaginationStatus(activePage) {\n      if (this.pageCount <= this.props.partialPageCount) {\n        return PAGINATION_PART.WHOLE_PAGES;\n      }\n\n      if (activePage < this.props.partialPageCount) {\n        return PAGINATION_PART.HEAD_PART;\n      }\n\n      if (this.pageCount - activePage <= this.props.partialPageCount) {\n        return PAGINATION_PART.TAIL_PART;\n      }\n\n      return PAGINATION_PART.MIDDLE_PART;\n    }\n  }, {\n    key: 'getPartialPages',\n    value: function getPartialPages(status, partialCount, activePage) {\n      switch (status) {\n        case PAGINATION_PART.HEAD_PART:\n          return this.pageArr.slice(0, partialCount);\n\n        case PAGINATION_PART.TAIL_PART:\n          return this.pageArr.slice(this.pageCount - partialCount);\n\n        case PAGINATION_PART.MIDDLE_PART:\n          return this.pageArr.slice(activePage - this.halfPartialPageCount, activePage + this.halfPartialPageCount + 1);\n\n        default:\n          return this.pageArr;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var PageButton = this.PageButton;\n      var _props = this.props,\n          activePage = _props.activePage,\n          partialPageCount = _props.partialPageCount,\n          prePageText = _props.prePageText,\n          nextPageText = _props.nextPageText,\n          className = _props.className;\n      var paginationStatus = this.getPaginationStatus(activePage);\n      var partialPages = this.getPartialPages(paginationStatus, partialPageCount, activePage);\n      var firstPage = this.pageArr[0];\n      var lastPage = this.pageArr[this.pageArr.length - 1];\n      var isWholePages = paginationStatus === PAGINATION_PART.WHOLE_PAGES;\n      var isInHeadPart = paginationStatus === PAGINATION_PART.HEAD_PART;\n      var isInMiddlePart = paginationStatus === PAGINATION_PART.MIDDLE_PART;\n      var isInTailPart = paginationStatus === PAGINATION_PART.TAIL_PART;\n      var isFirstPage = activePage === firstPage;\n      var isLastPage = activePage === lastPage;\n      return _react2.default.createElement('ul', {\n        className: className\n      }, _react2.default.createElement(PageButton, {\n        handleClick: this.changePageByAction(PAGINATION_ACTIONS.PREV),\n        disabled: isFirstPage\n      }, prePageText), !isWholePages && (!isInHeadPart || isInMiddlePart) && _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement(PageButton, {\n        handleClick: this.changePage(firstPage)\n      }, firstPage + 1), _react2.default.createElement(PageButton, {\n        disabled: true\n      }, '...')), partialPages.map(function (u) {\n        return _react2.default.createElement(PageButton, {\n          handleClick: _this4.changePage(u),\n          key: 'page-' + u,\n          active: activePage === u\n        }, u + 1);\n      }), !isWholePages && (!isInTailPart || isInMiddlePart) && _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement(PageButton, {\n        disabled: true\n      }, '...'), _react2.default.createElement(PageButton, {\n        handleClick: this.changePage(lastPage)\n      }, lastPage + 1)), _react2.default.createElement(PageButton, {\n        handleClick: this.changePageByAction(PAGINATION_ACTIONS.NEXT),\n        disabled: isLastPage\n      }, nextPageText));\n    }\n  }]);\n\n  return Pagination;\n}(_react.Component);\n\nPagination.propTypes = {\n  handleChangePage: _propTypes2.default.func.isRequired,\n  activePage: _propTypes2.default.number.isRequired,\n  totalCount: _propTypes2.default.number.isRequired,\n  perPageItemCount: _propTypes2.default.number.isRequired,\n  partialPageCount: _propTypes2.default.number,\n  nextPageText: _propTypes2.default.string,\n  prePageText: _propTypes2.default.string,\n  className: _propTypes2.default.string\n};\nPagination.defaultProps = {\n  className: 'react-pagination-status',\n  prePageText: '上一頁',\n  nextPageText: '下一頁',\n  partialPageCount: 5\n};\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}