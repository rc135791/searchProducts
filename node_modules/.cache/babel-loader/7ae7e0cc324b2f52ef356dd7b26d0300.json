{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extend = require(\"extend\");\n\nvar utils_1 = require(\"../utils\");\n\nvar authenticator_1 = require(\"./authenticator\");\n\nvar BearerTokenAuthenticator =\n/** @class */\nfunction (_super) {\n  __extends(BearerTokenAuthenticator, _super);\n  /**\n   * Bearer Token Authenticator Class\n   *\n   * Handles the Bearer Token pattern.\n   *\n   * @param {Object} options\n   * @param {String} options.bearerToken - bearer token to pass in header\n   * @constructor\n   */\n\n\n  function BearerTokenAuthenticator(options) {\n    var _this = _super.call(this) || this;\n\n    _this.requiredOptions = ['bearerToken'];\n    utils_1.validateInput(options, _this.requiredOptions);\n    _this.bearerToken = options.bearerToken;\n    return _this;\n  }\n\n  BearerTokenAuthenticator.prototype.setBearerToken = function (bearerToken) {\n    this.bearerToken = bearerToken;\n  };\n\n  BearerTokenAuthenticator.prototype.authenticate = function (options) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var authHeader = {\n        Authorization: \"Bearer \" + _this.bearerToken\n      };\n      options.headers = extend(true, {}, options.headers, authHeader);\n      resolve();\n    });\n  };\n\n  return BearerTokenAuthenticator;\n}(authenticator_1.Authenticator);\n\nexports.BearerTokenAuthenticator = BearerTokenAuthenticator;","map":null,"metadata":{},"sourceType":"script"}