{"ast":null,"code":"\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2019.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar camelcase = require(\"camelcase\");\n/**\n * To adhere to our Node style guideline, we expose lowerCamelCase parameters to the user. However, the\n * service expects different case conventions so we have to serialize the user-provided params. We do this\n * by passing in the user params with the allowed params, looking for the camelcase version of each allowed\n * param, and creating an object with the correct keys.\n *\n * @param {object} options - the user-provided options, with lower camel case parameters\n * @param {string[]} allowedParams - array of the parameter names that the service allows\n * @returns {object}\n */\n\n\nfunction processUserParameters(options, allowedParams) {\n  var processedOptions = {}; // look for the camelcase version of each parameter - that is what we expose to the user\n\n  allowedParams.forEach(function (param) {\n    var keyName = camelcase(param);\n\n    if (options[keyName] !== undefined) {\n      processedOptions[param] = options[keyName];\n    } else if (options[param] !== undefined) {\n      // if the user used the service property name, warn them and give them the name to use\n      console.warn(\"Unrecognized parameter: \\\"\" + param + \"\\\". Did you mean \\\"\" + keyName + \"\\\"?\");\n    }\n  });\n  return processedOptions;\n}\n\nexports.processUserParameters = processUserParameters;","map":null,"metadata":{},"sourceType":"script"}