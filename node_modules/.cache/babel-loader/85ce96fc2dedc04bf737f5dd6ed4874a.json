{"ast":null,"code":"'use strict';\n/**\n * if VCAP_SERVICES exists or the instance name exists in the\n * environemnt, then it returns the credentials\n * for the last service that starts with 'name' or {} otherwise\n * If plan is specified it will return the credentials for\n * the service instance that match that plan or {} otherwise\n * @param  String name, service name\n * @param  String plan, service plan\n * @param  String iname, instance name\n * @return {Object} the service credentials or {} if\n * name is not found in VCAP_SERVICES or instance name\n * is set as an environmental variable. Env var must be\n * upper case.\n */\n\nmodule.exports.getCredentials = function (name, plan, iname) {\n  if (process.env.VCAP_SERVICES) {\n    var services = JSON.parse(process.env.VCAP_SERVICES);\n\n    for (var service_name in services) {\n      if (service_name.indexOf(name) === 0) {\n        for (var i = services[service_name].length - 1; i >= 0; i--) {\n          var instance = services[service_name][i];\n          if ((!plan || plan === instance.plan) && (!iname || iname === instance.name)) return instance.credentials || {};\n        }\n      }\n    }\n  } //Check if env vars were set directly\n\n\n  var env = process.env;\n  var instance = {};\n\n  if (iname) {\n    iname = iname.toUpperCase().replace(/[\\s&-]/g, '_');\n\n    if (env[iname]) {\n      try {\n        instance = JSON.parse(env[iname]);\n      } catch (e) {\n        console.warn('Error parsing JSON from process.env.' + iname);\n        console.warn(e);\n      }\n    }\n  }\n\n  return instance;\n};","map":null,"metadata":{},"sourceType":"script"}