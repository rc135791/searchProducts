{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _helpers = require('../helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/* eslint-disable react/no-array-index-key */\n\n\nvar Body = function Body(_ref) {\n  var columns = _ref.columns,\n      data = _ref.data,\n      arrayOption = _ref.arrayOption;\n  var columnsArr = columns.split('.');\n  var optionHandlers = void 0;\n\n  if (columnsArr.length === 0) {\n    throw new Error('Can\\'t reslove columns');\n  }\n\n  if (Array.isArray(arrayOption) && arrayOption.length > 0) {\n    optionHandlers = arrayOption.reduce(function (prev, opt) {\n      prev.handlers.push(_helpers2.default.apply(undefined, _toConsumableArray(opt)));\n      prev.propNames.push(opt[0]);\n      return prev;\n    }, {\n      handlers: [],\n      propNames: []\n    });\n  }\n\n  return data.map(function (single, i) {\n    return _react2.default.createElement('tr', {\n      key: 'row-' + i\n    }, columnsArr.map(function (col) {\n      var arrPropVal = void 0;\n\n      if (optionHandlers) {\n        var _optionHandlers = optionHandlers,\n            _handlers = _optionHandlers.handlers,\n            _propNames = _optionHandlers.propNames;\n\n        var propNameIndex = _propNames.indexOf(col);\n\n        var handleOptFunc = propNameIndex >= 0 && _handlers[propNameIndex];\n        arrPropVal = typeof handleOptFunc === 'function' && handleOptFunc(single);\n      }\n\n      return _react2.default.createElement('td', {\n        key: 'col-' + col\n      }, arrPropVal || single[col]);\n    }));\n  });\n};\n\nBody.propTypes = {\n  arrayOption: _propTypes2.default.arrayOf(_propTypes2.default.arrayOf(_propTypes2.default.string)),\n  columns: _propTypes2.default.string.isRequired,\n  data: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired\n};\nexports.default = Body;","map":null,"metadata":{},"sourceType":"script"}