{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Helper method that can be bound to a stream - it sets the output to utf-8, captures all of the results, and returns a promise that resolves to the final text\n * Essentially a smaller version of concat-stream wrapped in a promise\n *\n * @param {Stream} [stream] optional stream param for when not bound to an existing stream instance\n * @return {Promise}\n */\n\nfunction streamToPromise(stream) {\n  stream = stream || this;\n  return new Promise(function (resolve, reject) {\n    var results = [];\n    stream.on('data', function (result) {\n      results.push(result);\n    }).on('end', function () {\n      resolve(Buffer.isBuffer(results[0]) ? Buffer.concat(results).toString() : results);\n    }).on('error', reject);\n  });\n}\n\nexports.streamToPromise = streamToPromise;","map":null,"metadata":{},"sourceType":"script"}