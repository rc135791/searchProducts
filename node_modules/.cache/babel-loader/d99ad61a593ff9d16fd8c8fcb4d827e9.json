{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extend = require(\"extend\");\n\nvar token_managers_1 = require(\"../token-managers\");\n\nvar authenticator_1 = require(\"./authenticator\");\n\nvar TokenRequestBasedAuthenticator =\n/** @class */\nfunction (_super) {\n  __extends(TokenRequestBasedAuthenticator, _super);\n  /**\n   * Request Based Authenticator Class\n   *\n   * Handles authentication patterns that invoke requests for bearer tokens.\n   *\n   * @param {Object} options\n   * @constructor\n   */\n\n\n  function TokenRequestBasedAuthenticator(options) {\n    var _this = _super.call(this) || this;\n\n    _this.disableSslVerification = Boolean(options.disableSslVerification);\n    _this.url = options.url; // default to empty object\n\n    _this.headers = options.headers || {}; // this class must be extended by a subclass - the JwtTokenManager\n    // will fail upon requesting a token\n\n    _this.tokenManager = new token_managers_1.JwtTokenManager(options);\n    return _this;\n  }\n  /**\n   * Setter for the disableSslVerification property.\n   *\n   * @param {boolean} value - the new value for the disableSslVerification property\n   * @returns {void}\n   */\n\n\n  TokenRequestBasedAuthenticator.prototype.setDisableSslVerification = function (value) {\n    // if they try to pass in a non-boolean value,\n    // use the \"truthy-ness\" of the value\n    this.disableSslVerification = Boolean(value);\n    this.tokenManager.setDisableSslVerification(this.disableSslVerification);\n  };\n  /**\n   * Set a completely new set of headers.\n   *\n   * @param {OutgoingHttpHeaders} headers - the new set of headers as an object\n   * @returns {void}\n   */\n\n\n  TokenRequestBasedAuthenticator.prototype.setHeaders = function (headers) {\n    if (typeof headers !== 'object') {\n      // do nothing, for now\n      return;\n    }\n\n    this.headers = headers;\n    this.tokenManager.setHeaders(this.headers);\n  };\n\n  TokenRequestBasedAuthenticator.prototype.authenticate = function (options) {\n    return this.tokenManager.getToken().then(function (token) {\n      var authHeader = {\n        Authorization: \"Bearer \" + token\n      };\n      options.headers = extend(true, {}, options.headers, authHeader);\n      return;\n    });\n  };\n\n  return TokenRequestBasedAuthenticator;\n}(authenticator_1.Authenticator);\n\nexports.TokenRequestBasedAuthenticator = TokenRequestBasedAuthenticator;","map":null,"metadata":{},"sourceType":"script"}